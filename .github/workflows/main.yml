name: Build & Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: applyr.cr.cloud.ru
  IMAGE_NAME_BOT: applyr-bot
  IMAGE_NAME_API: applyr-api
  DEPLOY_HOST: "45.132.176.39"
  DEPLOY_USER: deployer

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Cloud.ru Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_KEY_ID }}
          password: ${{ secrets.REGISTRY_KEY_SECRET }}

      - name: Build and push Bot
        run: |
          docker build ./bot -t $REGISTRY/$IMAGE_NAME_BOT:latest
          docker push $REGISTRY/$IMAGE_NAME_BOT:latest


      - name: Build and push Api
        run: |
          docker build ./api -t $REGISTRY/$IMAGE_NAME_API:latest
          docker push $REGISTRY/$IMAGE_NAME_API:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Upload env
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          echo "${{ secrets.ENV }}" > .env
          chmod 600 private_key.pem
          scp -i private_key.pem -o StrictHostKeyChecking=no .env ${{ env.DEPLOY_USER }}@${{ env.DEPLOY_HOST }}:/opt/applyr/.env
          rm private_key.pem
          rm .env

      - name: Upload files
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "compose.yml,static,nginx/nginx.conf"
          target: /opt/applyr

      - name: Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export REGISTRY=${{ env.REGISTRY }}
            export IMAGE_NAME_BOT=${{ env.IMAGE_NAME_BOT }}
            export IMAGE_NAME_API=${{ env.IMAGE_NAME_API }}
            echo "${{ secrets.REGISTRY_KEY_SECRET }}" | docker login $REGISTRY -u "${{ secrets.REGISTRY_KEY_ID }}" --password-stdin
            docker pull $REGISTRY/$IMAGE_NAME_BOT:latest
            docker pull $REGISTRY/$IMAGE_NAME_API:latest
            docker compose -f /opt/applyr/compose.yml up -d
