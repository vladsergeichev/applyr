"""added_enum_stage_types

Revision ID: 1c4f38febb16
Revises: 5b3538f6be69
Create Date: 2025-08-03 12:04:47.185499

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "1c4f38febb16"
down_revision: Union[str, None] = "5b3538f6be69"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Создаем тип ENUM, если он еще не существует
    stagetypes_enum = postgresql.ENUM(
        "NEW", "HR", "TECH", "BUSINESS", "REJECTED", "OFFER", name="stagetypes"
    )
    stagetypes_enum.create(op.get_bind(), checkfirst=True)

    # # ### commands auto generated by Alembic - please adjust! ###
    # op.alter_column('stage', 'stage_type',
    #            existing_type=sa.VARCHAR(length=255),
    #            type_=stagetypes_enum,
    #            nullable=False)

    # Устанавливаем значение 'NEW' для всех существующих записей
    op.execute("UPDATE stage SET stage_type = 'NEW'")

    # Преобразуем столбец с использованием выражения USING
    op.execute(
        "ALTER TABLE stage ALTER COLUMN stage_type TYPE stagetypes USING stage_type::stagetypes"
    )

    op.add_column("user", sa.Column("name", sa.String(length=255), nullable=True))
    op.add_column("user", sa.Column("updated_at", sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("user", "updated_at")
    op.drop_column("user", "name")
    op.alter_column(
        "stage",
        "stage_type",
        existing_type=postgresql.ENUM(
            "NEW", "HR", "TECH", "BUSINESS", "REJECTED", "OFFER", name="stagetypes"
        ),
        type_=sa.VARCHAR(length=255),
        nullable=True,
    )
    # Удаляем тип ENUM
    stagetypes_enum = postgresql.ENUM(
        "NEW", "HR", "TECH", "BUSINESS", "REJECTED", "OFFER", name="stagetypes"
    )
    stagetypes_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
