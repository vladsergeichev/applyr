// –†–µ–Ω–¥–µ—Ä–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–π
class VacancyRenderer {
    constructor() {
        this.vacanciesList = document.getElementById('vacancies-list');
        this.noVacancies = document.getElementById('no-vacancies');
    }

    // –û—á–∏—â–∞–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤–∞–∫–∞–Ω—Å–∏–π
    clear() {
        this.vacanciesList.innerHTML = '';
        this.vacanciesList.classList.add('hidden');
        this.noVacancies.classList.add('hidden');
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–π
    showNoVacancies() {
        this.clear();
        this.noVacancies.classList.remove('hidden');
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
    showError(message) {
        this.clear();
        this.vacanciesList.innerHTML = `
            <div class="error-vacancies">
                <div class="error-icon">‚ö†Ô∏è</div>
                <p>${message}</p>
            </div>
        `;
        this.vacanciesList.classList.remove('hidden');
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    showLoading() {
        this.clear();
        this.vacanciesList.innerHTML = `
            <div class="loading-vacancies">
                <div class="spinner"></div>
                <p>–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π...</p>
            </div>
        `;
        this.vacanciesList.classList.remove('hidden');
    }

    // –†–µ–Ω–¥–µ—Ä–∏—Ç —Å–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π
    renderVacancies(vacancies, username) {
        this.clear();

        if (!vacancies || vacancies.length === 0) {
            this.showNoVacancies();
            return;
        }

        const header = this.createVacanciesHeader(vacancies, username);
        const grid = this.createVacanciesGrid(vacancies);

        this.vacanciesList.appendChild(header);
        this.vacanciesList.appendChild(grid);
        this.vacanciesList.classList.remove('hidden');
    }

    // –°–æ–∑–¥–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ø–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π
    createVacanciesHeader(vacancies, username) {
        const header = document.createElement('div');
        header.className = 'vacancies-header';
        header.innerHTML = `
            <h3>–ú–æ–∏ –≤–∞–∫–∞–Ω—Å–∏–∏</h3>
            <div class="vacancies-count">${vacancies.length} –≤–∞–∫–∞–Ω—Å–∏–π</div>
        `;
        return header;
    }

    // –°–æ–∑–¥–∞–µ—Ç —Å–µ—Ç–∫—É –≤–∞–∫–∞–Ω—Å–∏–π
    createVacanciesGrid(vacancies) {
        const grid = document.createElement('div');
        grid.className = 'vacancies-grid';

        vacancies.forEach(vacancy => {
            const vacancyCard = this.createVacancyCard(vacancy);
            grid.appendChild(vacancyCard);
        });

        return grid;
    }

    // –°–æ–∑–¥–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É –≤–∞–∫–∞–Ω—Å–∏–∏
    createVacancyCard(vacancy) {
        const card = document.createElement('div');
        card.className = 'vacancy-item';
        card.dataset.vacancyId = vacancy.id;

        const date = new Date(vacancy.created_at).toLocaleDateString('ru-RU', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });

        card.innerHTML = `
            <div class="vacancy-header">
                <div class="vacancy-title">${this.escapeHtml(vacancy.name)}</div>
                <div class="vacancy-actions">
                    <button class="delete-btn" onclick="deleteVacancy(${vacancy.id})" title="–£–¥–∞–ª–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é">
                        üóëÔ∏è
                    </button>
                </div>
            </div>
            <div class="vacancy-meta">
                <div class="vacancy-date">–°–æ–∑–¥–∞–Ω–∞: ${date}</div>
            </div>
            ${vacancy.link ? `
                <div class="vacancy-link-container">
                    <a href="${this.escapeHtml(vacancy.link)}" target="_blank" class="vacancy-link">
                        üîó –û—Ç–∫—Ä—ã—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é
                    </a>
                </div>
            ` : ''}
            ${vacancy.description ? `
                <div class="vacancy-description">
                    ${this.escapeHtml(vacancy.description)}
                </div>
            ` : ''}
            ${vacancy.company_name ? `
                <div class="vacancy-company">
                    <strong>–ö–æ–º–ø–∞–Ω–∏—è:</strong> ${this.escapeHtml(vacancy.company_name)}
                </div>
            ` : ''}
        `;

        return card;
    }

    // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç HTML –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }
} 