import logging

from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from services.api_client import APIClient

logger = logging.getLogger(__name__)
router = Router()
api_client = APIClient()


@router.message(Command("my_applies"))
async def cmd_my_applies(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –æ—Ç–∫–ª–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        applies = await api_client.get_user_applies(message.from_user.id)

        if applies:
            text = "üìã <b>–í–∞—à–∏ –æ—Ç–∫–ª–∏–∫–∏:</b>\n\n"
            for i, apply in enumerate(applies[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
                text += f"{i}. <b>{apply['name']}</b>\n"
                text += f"   üìÖ {apply['created_at'][:10]}\n"
                text += f"   üîó <a href=\"{apply['link']}\">–°—Å—ã–ª–∫–∞</a>\n\n"

            if len(applies) > 10:
                text += f"... –∏ –µ—â–µ {len(applies) - 10} –æ—Ç–∫–ª–∏–∫–æ–≤"
        else:
            text = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∫–ª–∏–∫–æ–≤. –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–∞–∫–∞–Ω—Å–∏–µ–π!"

        await message.answer(text, parse_mode="HTML", disable_web_page_preview=True)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∫–ª–∏–∫–æ–≤: {e}")
        await message.answer("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∫–ª–∏–∫–æ–≤")
