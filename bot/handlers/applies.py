import logging

from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from services.api_client import APIClient

logger = logging.getLogger(__name__)
router = Router()
api_client = APIClient()


@router.message(Command("my_vacancies"))
async def cmd_my_vacancies(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–Ω–∞–µ–º –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    username = message.from_user.username
    if not username or not await api_client.get_user_by_telegram_username(username):
        await message.answer(
            "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç https://applyr.vladsergeichev.ru –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, –∏—Å–ø–æ–ª—å–∑—É—è –≤–∞—à Telegram username. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º."
        )
        return
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å, –∏–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º user_id –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
        applies = await api_client.get_user_applies(username)

        if applies:
            text = "üìã <b>–í–∞—à–∏ –≤–∞–∫–∞–Ω—Å–∏–∏:</b>\n\n"
            for i, apply in enumerate(applies[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
                text += f"{i}. <b>{apply['name']}</b>\n"
                text += f"   üìÖ {apply['created_at'][:10]}\n"
                text += f"   üîó <a href=\"{apply['link']}\">–°—Å—ã–ª–∫–∞</a>\n\n"

            if len(applies) > 10:
                text += f"... –∏ –µ—â–µ {len(applies) - 10} –≤–∞–∫–∞–Ω—Å–∏–π"
        else:
            text = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π. –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–∞–∫–∞–Ω—Å–∏–µ–π!"

        await message.answer(text, parse_mode="HTML", disable_web_page_preview=True)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–π: {e}")
        await message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
