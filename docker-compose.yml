services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - applyr_network

  api:
    image: applyr.cr.cloud.ru/applyr-api:latest
    container_name: api
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - applyr_network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./static:/etc/static
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - api
    networks:
      - applyr_network

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./certbot/log:/var/log
    command: certonly --webroot -w /var/www/certbot --force-renewal --email vladsergeichev@gmail.com --agree-tos -d applyr.vladsergeichev.ru
    depends_on:
      - nginx
    networks:
      - applyr_network

  bot:
    image: applyr.cr.cloud.ru/applyr-bot:latest
    container_name: bot
    environment:
      API_URL: ${API_URL}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      LOG_LEVEL: ${LOG_LEVEL}
    depends_on:
      - api
    networks:
      - applyr_network

volumes:
  postgres_data:
  certbot:
  static:

networks:
  applyr_network:
    driver: bridge